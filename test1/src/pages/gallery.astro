---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';

const galleryItems = await getCollection('gallery');
const sortedGallery = galleryItems.sort((a, b) => a.data.order - b.data.order);
const categories = ['All', ...new Set(galleryItems.map(item => item.data.category))];
---

<Layout title="Gallery - Home Services" description="View our portfolio of completed projects including renovations, repairs, cleaning, and maintenance work.">
	<Navigation />

	<main>
		<!-- Hero Section -->
		<section class="page-hero">
			<div class="container">
				<h1>Our Work</h1>
				<p class="hero-subtitle">
					Take a look at some of our recent projects and see the quality of our work firsthand.
				</p>
			</div>
		</section>

		<!-- Filter Section -->
		<section class="filter-section">
			<div class="container">
				<div class="filter-buttons">
					{categories.map(category => (
						<button
							class={`filter-btn ${category === 'All' ? 'active' : ''}`}
							data-filter={category.toLowerCase()}
						>
							{category}
						</button>
					))}
				</div>
			</div>
		</section>

		<!-- Gallery Grid Section -->
		<section class="gallery-section">
			<div class="container">
				<div class="gallery-grid">
					{sortedGallery.map(async (item, index) => {
						const { Content } = await item.render();
						// Map gallery items to image files
						const imageMap = {
							'excavation-cat-dozer': '/gallery/excavation-1.jpg',
							'excavation-site-prep': '/gallery/excavation-2.jpg',
							'excavation-land-clearing': '/gallery/excavation-3.jpg',
							'excavation-grand-peaks': '/gallery/excavation-4.jpg',
							'excavation-foundation-work': '/gallery/excavation-5.jpg',
						};
						const imageSrc = imageMap[item.slug];

						return (
							<div class="gallery-item" data-category={item.data.category.toLowerCase()}>
								<div class="gallery-card">
									<div class="gallery-image">
										{imageSrc ? (
											<img src={imageSrc} alt={item.data.title} />
										) : (
											<div class="image-placeholder">
												<span class="placeholder-text">{item.data.category}</span>
											</div>
										)}
									</div>
									<div class="gallery-info">
										<span class="gallery-category">{item.data.category}</span>
										<h3>{item.data.title}</h3>
										<p>{item.data.description}</p>
										<div class="gallery-content">
											<Content />
										</div>
									</div>
								</div>
							</div>
						);
					})}
				</div>
			</div>
		</section>

		<!-- CTA Section -->
		<section class="cta-section">
			<div class="container">
				<div class="cta-content">
					<h2>Want Similar Results?</h2>
					<p>Let us help you transform your space with our professional services.</p>
					<a href="/contact" class="btn btn-primary">Start Your Project</a>
				</div>
			</div>
		</section>
	</main>

	<Footer />
</Layout>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const filterBtns = document.querySelectorAll('.filter-btn');
		const galleryItems = document.querySelectorAll('.gallery-item');

		filterBtns.forEach(btn => {
			btn.addEventListener('click', () => {
				// Remove active class from all buttons
				filterBtns.forEach(b => b.classList.remove('active'));
				// Add active class to clicked button
				btn.classList.add('active');

				const filter = btn.getAttribute('data-filter');

				galleryItems.forEach(item => {
					if (filter === 'all' || item.getAttribute('data-category') === filter) {
						item.style.display = 'block';
						setTimeout(() => {
							item.style.opacity = '1';
							item.style.transform = 'scale(1)';
						}, 10);
					} else {
						item.style.opacity = '0';
						item.style.transform = 'scale(0.8)';
						setTimeout(() => {
							item.style.display = 'none';
						}, 300);
					}
				});
			});
		});
	});
</script>

<style>
	.page-hero {
		background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-accent) 100%);
		color: white;
		padding: var(--spacing-xl) var(--spacing-md);
		text-align: center;
		min-height: 500px;
		display: flex;
		align-items: center;
	}

	.page-hero h1 {
		color: white;
		font-size: 3rem;
		margin-bottom: var(--spacing-sm);
	}

	.hero-subtitle {
		font-size: 1.25rem;
		color: rgba(255, 255, 255, 0.95);
		max-width: 700px;
		margin: 0 auto;
	}

	.filter-section {
		padding: var(--spacing-md);
		background: var(--color-bg-light);
		border-bottom: 1px solid var(--color-border);
	}

	.filter-buttons {
		display: flex;
		gap: var(--spacing-sm);
		justify-content: center;
		flex-wrap: wrap;
	}

	.filter-btn {
		padding: 0.625rem 1.5rem;
		background: white;
		color: var(--color-text);
		border: 2px solid var(--color-border);
		border-radius: var(--border-radius);
		font-weight: 600;
		transition: all 0.3s ease;
	}

	.filter-btn:hover,
	.filter-btn.active {
		background: var(--color-primary);
		color: white;
		border-color: var(--color-primary);
	}

	.gallery-section {
		padding: var(--spacing-xl) var(--spacing-md);
	}

	.gallery-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
		gap: var(--spacing-lg);
	}

	.gallery-item {
		opacity: 1;
		transform: scale(1);
		transition: opacity 0.3s ease, transform 0.3s ease;
	}

	.gallery-card {
		background: white;
		border-radius: var(--border-radius);
		overflow: hidden;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
		transition: all 0.3s ease;
		height: 100%;
		display: flex;
		flex-direction: column;
	}

	.gallery-card:hover {
		transform: translateY(-8px);
		box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
	}

	.gallery-image {
		width: 100%;
		aspect-ratio: 4/3;
		overflow: hidden;
		background: var(--color-bg-light);
	}

	.gallery-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.image-placeholder {
		width: 100%;
		height: 100%;
		background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-accent) 100%);
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.placeholder-text {
		color: white;
		font-size: 1.5rem;
		font-weight: 600;
		opacity: 0.8;
	}

	.gallery-info {
		padding: var(--spacing-md);
		flex-grow: 1;
		display: flex;
		flex-direction: column;
	}

	.gallery-category {
		display: inline-block;
		padding: 0.25rem 0.75rem;
		background: var(--color-bg-light);
		color: var(--color-primary);
		border-radius: 20px;
		font-size: 0.875rem;
		font-weight: 600;
		margin-bottom: var(--spacing-sm);
		align-self: flex-start;
	}

	.gallery-info h3 {
		color: var(--color-text);
		margin-bottom: var(--spacing-xs);
		font-size: 1.25rem;
	}

	.gallery-info p {
		color: var(--color-text-light);
		font-size: 0.95rem;
		margin: 0;
	}

	.gallery-content {
		margin-top: var(--spacing-sm);
		font-size: 0.9rem;
		color: var(--color-text-light);
	}

	.gallery-content :global(p) {
		margin: 0;
		line-height: 1.6;
	}

	.cta-section {
		background: var(--color-primary);
		color: white;
		text-align: center;
		padding: var(--spacing-xl) var(--spacing-md);
	}

	.cta-content h2 {
		color: white;
		margin-bottom: var(--spacing-sm);
	}

	.cta-content p {
		color: rgba(255, 255, 255, 0.95);
		font-size: 1.25rem;
		margin-bottom: var(--spacing-md);
	}

	.btn {
		display: inline-block;
		padding: 1rem 2rem;
		border-radius: var(--border-radius);
		font-weight: 600;
		text-align: center;
		transition: all 0.3s ease;
		text-decoration: none;
	}

	.btn-primary {
		background: white;
		color: var(--color-primary);
		border: 2px solid white;
	}

	.btn-primary:hover {
		background: transparent;
		color: white;
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
	}

	@media (max-width: 768px) {
		.page-hero h1 {
			font-size: 2rem;
		}

		.gallery-grid {
			grid-template-columns: 1fr;
		}
	}
</style>
